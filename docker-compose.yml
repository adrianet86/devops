version: '3.3'
services:
  nginx:
    build:
      context: nginx
      dockerfile: .docker/Dockerfile
    image: ${NGINX_IMAGE}
    container_name: ${NGINX_CONTAINER}
    ports:
      - 80:80
#      - 443:443 # HTTPS
    depends_on:
      - php
      - nodejs
      - postgres
    networks:
    - internal-network

  php:
    build:
      context: php
      dockerfile: .docker/Dockerfile
    image: ${PHP_IMAGE}
    container_name: ${PHP_CONTAINER}
    working_dir: /app
    volumes:
    - ./php:/app
    ports:
    - 9000:9000
    networks:
    - internal-network

  nodejs:
    build:
      context: nodejs
      dockerfile: .docker/Dockerfile
    image: ${NODEJS_IMAGE}
    container_name: ${NODEJS_CONTAINER}
    restart: always
    working_dir: /app
#    volumes:
#    - ./nodejs:/app
    ports:
      - 3000:3000
    networks:
    - internal-network

  postgres:
    build:
      context: postgres
      dockerfile: .docker/Dockerfile
    image: ${POSTGRES_IMAGE}
    container_name: ${POSTGRES_CONTAINER}
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: ${POSTGRES_PGDATA}
    volumes:
    - ./postgres/data:${POSTGRES_PGDATA}
    ports:
    - 5432:5432
    networks:
    - internal-network
    - external-network

networks:
  internal-network:
    driver: bridge
    internal: true
  external-network:
    external: true